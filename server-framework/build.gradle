apply plugin: 'application'
apply plugin: 'maven-publish'

sourceCompatibility = 17
mainClassName = 'pama1234.gdx.game.app.server.ServerLauncher'
eclipse.project.name = appName + '-server-framework'

dependencies {
  api "javax.vecmath:vecmath:$vecmathVersion"
  api "com.esotericsoftware:kryo:$kryoVersion"
}

jar {
  archiveBaseName.set(appName)
  // the duplicatesStrategy matters starting in Gradle 7.0; this setting works.
  duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
  dependsOn configurations.runtimeClasspath
  from {
    configurations.runtimeClasspath.collect {
      it.isDirectory() ? it : zipTree(it)
    }
  }
  // these "exclude" lines remove some unnecessary duplicate files in the output JAR.
  exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')
  dependencies {
    exclude('META-INF/INDEX.LIST', 'META-INF/maven/**')
  }
  // setting the manifest makes the JAR runnable.
  manifest {
    attributes 'Main-Class': project.mainClassName
  }
  // this last step may help on some OSes that need extra instruction to make runnable JARs.
  doLast {
    file(archiveFile).setExecutable(true, false)
  }
}

// Equivalent to the jar task; here for compatibility with gdx-setup.
task dist(dependsOn: [jar]) {
}

publishing {
  publications {
    maven(MavenPublication) {
      groupId = 'pama1234'
      artifactId = 'server-framework'
      version = "0.0.3"
      from components.java

      pom {
        name = 'pama1234-server-framework'
        description = 'some server side framework'
        url = 'https://github.com/pama1234/just-some-other-libgdx-game'
        scm {
          url = 'https://github.com/pama1234/just-some-other-libgdx-game'
        }
      }
    }
  }
}