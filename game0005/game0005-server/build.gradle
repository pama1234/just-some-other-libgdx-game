apply plugin: 'application'

sourceCompatibility = 17
mainClassName = 'pama1234.game.app.server.launcher.ServerLauncher'
eclipse.project.name = appName + '-game0005-server'

dependencies {
  implementation project(':server-framework')

  api project(':framework0001:framework0001-neat')

  api 'commons-cli:commons-cli:1.5.0'

  api 'ai.djl:api:0.21.0'

  api 'ai.djl:basicdataset:0.21.0'
  api 'ai.djl:model-zoo:0.21.0'

  api "javax.vecmath:vecmath:$vecmathVersion"
  api "com.esotericsoftware:kryo:$kryoVersion"
}

jar {
  archiveBaseName.set(appName)
  // the duplicatesStrategy matters starting in Gradle 7.0; this setting works.
  duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
  dependsOn configurations.runtimeClasspath
  from {
    configurations.runtimeClasspath.collect {
      it.isDirectory() ? it : zipTree(it)
    }
  }
  // these "exclude" lines remove some unnecessary duplicate files in the output JAR.
  exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')
  dependencies {
    exclude('META-INF/INDEX.LIST', 'META-INF/maven/**')
  }
  // setting the manifest makes the JAR runnable.
  manifest {
    attributes 'Main-Class': project.mainClassName
  }
  // this last step may help on some OSes that need extra instruction to make runnable JARs.
  doLast {
    file(archiveFile).setExecutable(true, false)
  }
}

tasks.distTar { duplicatesStrategy = DuplicatesStrategy.EXCLUDE }
tasks.distZip { duplicatesStrategy = DuplicatesStrategy.EXCLUDE }
tasks.jar { duplicatesStrategy = DuplicatesStrategy.EXCLUDE }

// Equivalent to the jar task; here for compatibility with gdx-setup.
task dist(dependsOn: [jar]) { }
