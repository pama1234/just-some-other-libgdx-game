package org.eclipse.tm4e.ui.internal.utils;

import org.eclipse.jdt.annotation.Nullable;
import org.eclipse.jface.text.ITextViewer;
// import org.eclipse.swt.widgets.Display;
// import org.eclipse.swt.widgets.Shell;
import org.eclipse.ui.IWorkbenchPage;
import org.eclipse.ui.IWorkbenchPart;
import org.eclipse.ui.IWorkbenchWindow;
import org.eclipse.ui.PlatformUI;
import org.eclipse.ui.part.MultiPageEditorPart;
import org.eclipse.ui.texteditor.ITextEditor;

import pama1234.gdx.textmate.DeprecatedJface;

@DeprecatedJface
@Deprecated
public final class UI{
  @Nullable
  public static IWorkbenchPage getActivePage() {
    final var window=getActiveWindow();
    return window==null?null:window.getActivePage();
  }
  @Nullable
  public static IWorkbenchPart getActivePart() {
    final var page=getActivePage();
    return page==null?null:page.getActivePart();
  }
  // @Nullable
  // public static Shell getActiveShell() {
  //   final var window=getActiveWindow();
  //   return window==null?null:window.getShell();
  // }
  @Nullable
  public static ITextEditor getActiveTextEditor() {
    final var activePage=getActivePage();
    if(activePage==null) {
      return null;
    }
    final var editorPart=activePage.getActiveEditor();
    if(editorPart instanceof ITextEditor textEditor) {
      return textEditor;
    }else if(editorPart instanceof MultiPageEditorPart multiPageEditorPart) {
      final Object page=multiPageEditorPart.getSelectedPage();
      if(page instanceof ITextEditor textEditor) {
        return textEditor;
      }
    }
    return null;
  }
  @Nullable
  public static ITextViewer getActiveTextViewer() {
    final var editor=getActiveTextEditor();
    if(editor!=null) {
      return editor.getAdapter(ITextViewer.class);
    }
    return null;
  }
  @Nullable
  public static IWorkbenchWindow getActiveWindow() {
    return PlatformUI.getWorkbench().getActiveWorkbenchWindow();
  }
  // public static Display getDisplay() {
  //   if(PlatformUI.isWorkbenchRunning()) return PlatformUI.getWorkbench().getDisplay();
  //   final var display=Display.getCurrent();
  //   if(display!=null) return display;
  //   return Display.getDefault();
  // }
  private UI() {}
}
