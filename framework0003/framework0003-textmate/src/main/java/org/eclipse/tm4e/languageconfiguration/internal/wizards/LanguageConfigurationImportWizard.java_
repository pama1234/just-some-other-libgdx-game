package org.eclipse.tm4e.languageconfiguration.internal.wizards;

import org.eclipse.jdt.annotation.Nullable;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.jface.wizard.Wizard;
import org.eclipse.tm4e.languageconfiguration.internal.registry.ILanguageConfigurationDefinition;
import org.eclipse.tm4e.languageconfiguration.internal.registry.ILanguageConfigurationRegistryManager;
import org.eclipse.tm4e.languageconfiguration.internal.registry.LanguageConfigurationRegistryManager;
import org.eclipse.ui.IImportWizard;
import org.eclipse.ui.IWorkbench;
import org.osgi.service.prefs.BackingStoreException;

import pama1234.gdx.textmate.DeprecatedSwt;

@DeprecatedSwt
@Deprecated
public final class LanguageConfigurationImportWizard extends Wizard implements IImportWizard{
  @Nullable
  private SelectLanguageConfigurationWizardPage mainPage;
  @Nullable
  private ILanguageConfigurationDefinition createdDefinition;
  private ILanguageConfigurationRegistryManager registryManager;
  private final boolean save;
  public LanguageConfigurationImportWizard(final boolean save) {
    this.save=save;
    this.registryManager=LanguageConfigurationRegistryManager.getInstance();
  }
  public void setRegistryManager(final ILanguageConfigurationRegistryManager registryManager) {
    this.registryManager=registryManager;
  }
  @Override
  public void addPages() {
    mainPage=new SelectLanguageConfigurationWizardPage(registryManager);
    addPage(mainPage);
  }
  @Override
  public boolean performFinish() {
    assert mainPage!=null;
    final ILanguageConfigurationDefinition definition=mainPage.getDefinition();
    registryManager.registerLanguageConfigurationDefinition(definition);
    if(save) {
      try {
        registryManager.save();
      }catch(final BackingStoreException e) {
        e.printStackTrace();
        return false;
      }
    }
    createdDefinition=definition;
    return true;
  }
  @Override
  public void init(@Nullable final IWorkbench workbench,@Nullable final IStructuredSelection selection) {}
  @Nullable
  public ILanguageConfigurationDefinition getCreatedDefinition() {
    return createdDefinition;
  }
}
